# TODO

## Generate code coverage from an event log file

Piggly is split up into separate phases (recompile procs, install them, run
while recording events, uninstall the procs, generate report). If the run +
record step was split in two, piggly could be fed a text file generated by
tests run in any language.

## Rudimentary profiling

There is no easy way to profile PL/pgSQL besides adding `raise info '%', now`
manually. Piggly's instrumentation support procs could easily be extended to
print timestamps on each event. It's not clear how to present this information
in the report without it becoming cluttered.

## Coverage Pragmas

Some loops and branches cannot be reasonably fully covered. It might be useful
to extend piggly to recognize pragmas like `-- piggly: no coverage`, so certain
nodes wouldn't be tagged. However, it may ambiguous which node was intended to
be annotated in a nest of nodes... and should the pragma apply to the node's
descendants?
